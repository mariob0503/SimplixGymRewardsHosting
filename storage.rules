rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // User-specific storage
    match /users/{userId}/{allPaths=**} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId
                  && request.resource.size < 5 * 1024 * 1024; // 5MB limit
      allow update: if request.auth != null && 
                   request.auth.uid == userId &&
                   request.resource.data.keys().hasAll(['email']) &&  // Ensure email is always present
                   (request.resource.data.diff(resource.data).affectedKeys()
                    .hasOnly(['name', 'gymId', 'lastUpdated', 'email']));
    }
    
    // Public assets
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Game assets
    match /games/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
